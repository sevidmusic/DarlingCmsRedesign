#!/bin/bash
# dsh

set -o posix

logErrorMsg() {
    printf "\n\e[43m\e[30m%s\n\e[0m" "${1}" >> /dev/stderr
}

logErrorMsgAndExit1() {
    logErrorMsg "${1}"
    exit 1
}

determineDshDirectoryPath() {
    local CURRENT_FILE_PATH CURRENT_DIRECTORY_PATH
    CURRENT_FILE_PATH="${BASH_SOURCE[0]}"
    while [ -h "$CURRENT_FILE_PATH" ]; do # resolve $CURRENT_FILE_PATH until the file is no longer a symlink | -h is true if file exists and is a symlink
      CURRENT_DIRECTORY_PATH="$(cd -P "$(dirname "$CURRENT_FILE_PATH")" >/dev/null 2>&1 && pwd)"
      CURRENT_FILE_PATH="$(readlink "$CURRENT_FILE_PATH")"
      [[ $CURRENT_FILE_PATH != /* ]] && CURRENT_FILE_PATH="$CURRENT_DIRECTORY_PATH/$CURRENT_FILE_PATH" # if $CURRENT_FILE_PATH was a relative symlink, we need to resolve it relative to the path where the symlink file was located
    done
    printf "%s" "$(cd -P "$(dirname "$CURRENT_FILE_PATH")" >/dev/null 2>&1 && pwd)"
}

loadLibrary() {
    # use of -x instead of -f is intentinal, the file MUST exist and be executable
    # @seehttps://www.gnu.org/savannah-checkouts/gnu/bash/manual/bash.html#Bash-Conditional-Expressions
    [[ ! -x "${1}" ]] && logErrorMsg "Error! Failed to load ${1}!" && logErrorMsgAndExit1 "The script either does not exist, or is not executable."
    . ${1} ${2}
}

updateAndShowManPage() {
    local users_man_directory_path users_man1_directory_path help_file_path
    users_man_directory_path="${HOME}/.local/share/man"
    users_man1_directory_path="${users_man_directory_path}/man1"
    help_file_path="$(determineDshDirectoryPath)/helpFiles/help.txt"
    [[ ! -d "${users_man_directory_path}" ]] && mkdir "${users_man_directory_path}"
    [[ ! -d "${users_man1_directory_path}" ]] && mkdir "${users_man1_directory_path}"
    [[ -d "${users_man1_directory_path}" ]] && cp "${help_file_path}" "${users_man1_directory_path}/dsh.1"
    man "${users_man1_directory_path}/dsh.1"
}

loadLibrary "$(determineDshDirectoryPath | sed 's/\/dsh//g')/dshUI/dshUI" "--theme dsh.sh"

while test $# -gt 0; do
  case "$1" in
  -h | --help)
    shift
    updateAndShowManPage
    exit 0
    ;;
  *)
    shift
    logErrorMsgAndExit1 "Invalid flag ${1}"
    ;;
  esac
done


printf "\e[0m\e[30m\e[102m\ndsh is still under development.\e[0m\n\n"
