App Package : config.sh

config.sh s where the App Package's configuration variables are defined.

config.sh MUST be sourced from the App Package's Responses.sh, Requests.sh, and
OutputComponents.sh so they all use the same configuration variables.

dsh --configure-app-package can be used to modify config.sh.

For example to change the App's name:

dsh --configure-app-package "/Path/To/The/APP_NAME/Apps/AppPackage" "app_name" "NewAppName"

Overview of configuration variables defined in config.sh:

The name of the App this App Package represents
app_name="APP_NAME"

An email or url to submit bugs to
Example: bug_contact="email@email.example" or bug_contact="https://url.to.submit.bugs.to/"
bug_contact="contact not provided"

Determines if dsh can modify the App Packages config.sh, set config_locked
to 1 to prevent dsh from making modifications.
config_locked="0"

Associative array of official Darling Data Management System App's required by the App.
Array is indexed by App Name, values are version numbers.
Expected Structure:: dependencies=(["NameOfAppThisAppDependsOn"]="VersionOfAPP_NAMEDependsOn")
Example: dependencies=(["AppName"]="1.0.7")
declare -A dependencies
dependencies=()

A brief description of the App.
description="The App was developed for the Darling Data Management System."

An array of the names of the developers of the App.
Example: developers=( "Dev 1" "Dev 2")
developers=()

The default development port to use for the App. This is the port that will be used by the
development server started when dsh --make-app is run to make the App.
development_port="PORT"

A url where documentation can be found for the App, or the string "self_documented" if the
App provides documentation.
Example Url: documentation="https://url.to.documentation/"
Example self documentd: documentation="self_documented"
documentation="DOCUMENTATION_SOURCE"

The Apps default domain. This is the domain that will be used if [DOMAIN] is not
specified on call to dsh -b APP_NAME [DOMAIN]
domain="DOMAIN"

The name of the App's license. If a license has not been chosen for the app just put "none"
license="MIT"

The version number, format: x.x.x
Example: 1.0.0
version="0.0.0"

A unix timestamp of the date this version of the App was released, or if the APP_NAME
App is still in development, the unix timestamp of this development release.
Hint: A unix timestamp can be obtained in bash with: date +%s
version_date="unknown"


