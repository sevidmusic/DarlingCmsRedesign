#!/bin/bash

set -o posix

currentDirectoryPath() {
    local CURRENT_DIRECTORY
    CURRENT_DIRECTORY="${BASH_SOURCE[0]}"
    # Resolve symlynks
    while [ -h "$CURRENT_DIRECTORY" ]; do
      DIR="$(cd -P "$(dirname "$CURRENT_DIRECTORY")" >/dev/null 2>&1 && pwd)"
      CURRENT_DIRECTORY="$(readlink "$CURRENT_DIRECTORY")"
      [[ $CURRENT_DIRECTORY != /* ]] && CURRENT_DIRECTORY="$DIR/$CURRENT_DIRECTORY" # if $CURRENT_DIRECTORY was a relative symlink, we need to resolve it relative to the path where the symlink file was located
    done
    printf "%s" "${CURRENT_DIRECTORY}"
}

setupPaths() {
    PATH_TO_DSH_DIR="$(cd -P "$(dirname "$(currentDirectoryPath)")" >/dev/null 2>&1 && pwd)"
    PATH_TO_DSHUI="${PATH_TO_DSH_DIR}/dshui.sh"
    PATH_TO_DSH_FUNCTIONS="${PATH_TO_DSH_DIR}/dshfunctions.sh"
    PATH_TO_DSH_UNIT_ASSERTIONS="${PATH_TO_DSH_DIR}/dshUnitAssertions.sh"
    PATH_TO_DDMS="${PATH_TO_DSH_DIR/dsh\//}"
    PATH_TO_DSHUNIT="${PATH_TO_DSH_DIR}dshUnit"
    PATH_TO_DDMS_APP_DIR="${PATH_TO_DDMS}Apps/"
}

setupVars() {
    TEST_FILE_NAME="${1}"
    TEST_GROUP_NAME="${2}"
}

loadLibrary() {
    [[ ! -f "${1}" ]] && printf "\n\n\e[33mError! Failed to load ${1}!\e[0m\n\n" && exit 1
    . "${1}"
}

runTestFile() {
    [[ -f "${PATH_TO_DSH_DIR}/dshUnitTests/${1}" ]] && "${PATH_TO_DSH_DIR}/dshUnitTests/${1}" "${2}"
}

setupPaths

setupVars "${1}" "${2}"

loadLibrary "${PATH_TO_DSH_FUNCTIONS}"

loadLibrary "${PATH_TO_DSHUI}"

loadLibrary "${PATH_TO_DSH_UNIT_ASSERTIONS}"

runTestFile "${TEST_FILE_NAME}" "${TEST_GROUP_NAME}"


